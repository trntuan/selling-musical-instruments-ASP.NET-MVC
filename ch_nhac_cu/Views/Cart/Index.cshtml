@model IEnumerable<ch_nhac_cu.Models.CartModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
    int tong;
    int tongToanBo = 0;
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<!-- quantityall Javascript -->
@*<script src="~/Content/userAssets/js/quantityall.js"></script>*@
<script type="text/javascript">
    // xóa
    $(function () {
        $(".remove-cart").click(function () {
            var model = {};
            // Lấy ID sản phẩm từ thuộc tính data
            model.Id = $(this).data("product-id");
            var rowToRemove = $(this).closest("tr"); // Lấy hàng cha chứa nút xóa

            $.ajax({
                type: "POST",
                url: '@Url.Action("Remove", "Cart")',
                data: JSON.stringify(model),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function () {
                    $('#CartCount').text(parseInt($('#CartCount').text()) - 1);
                    rowToRemove.remove();

                    // Cập nhật lại giá trị tongToanBo
                    var total = 0;
                    $(".price-value").each(function () {
                        var price = parseFloat($(this).text());
                        if (!isNaN(price)) {
                            total += price;
                        }
                    });
                    $("#tongToanBo").text(total.toFixed(0) + " đ");
                    updateCartItemCount();

                },
                error: function () {
                    alert("Lỗi trong khi thêm vào giỏ hàng!");
                }
            });

            return false;
        });
    });

    // cập nhật
document.addEventListener('DOMContentLoaded', function () {
  var quantityInputs = document.querySelectorAll('.quantity-input');
  var btnMinusList = document.querySelectorAll('.btn-minus');
  var btnPlusList = document.querySelectorAll('.btn-plus');

  quantityInputs.forEach(function (input) {
    input.addEventListener('change', function () {
      var product = input.dataset.product;
      var quantity = parseInt(input.value);

      updateCart(product, quantity);
      updatePrice(input); // Cập nhật giá trị price-value khi thay đổi số lượng
      updateTotalValue(); // Cập nhật tổng giá trị dựa trên các dòng price-value
    });
  });

  btnMinusList.forEach(function (btnMinus, index) {
    btnMinus.addEventListener('click', function () {
      var input = quantityInputs[index];
      var product = input.dataset.product;
      var quantity = parseInt(input.value);

      if (quantity > 1) {
        quantity--;
        input.value = quantity;
        updateCart(product, quantity);
        updatePrice(input); // Cập nhật giá trị price-value khi giảm số lượng
        updateTotalValue(); // Cập nhật tổng giá trị dựa trên các dòng price-value
      }
    });
  });

  btnPlusList.forEach(function (btnPlus, index) {
    btnPlus.addEventListener('click', function () {
      var input = quantityInputs[index];
      var product = input.dataset.product;
      var quantity = parseInt(input.value);

      quantity++;
      input.value = quantity;
      updateCart(product, quantity);
      updatePrice(input); // Cập nhật giá trị price-value khi tăng số lượng
      updateTotalValue(); // Cập nhật tổng giá trị dựa trên các dòng price-value
    });
  });

  function updateCart(product, quantity) {
    var model = {
      Id: product,
      Quantity: quantity
    };

    // Gửi yêu cầu Ajax để cập nhật giỏ hàng
    $.ajax({
      type: "POST",
      url: '@Url.Action("UpdateCart", "Cart")',
      data: JSON.stringify(model),
      dataType: "json",
      contentType: "application/json; charset=utf-8",
      success: function () {
        updatePriceAndTotalValue();
      },
      error: function () {
        alert("Lỗi trong khi cập nhật giỏ hàng!");
      }
    });
  }

  function updatePrice(input) {
    var row = input.closest('tr');
    var priceCell = row.querySelector('.price-value');
    var unitPrice = parseFloat(row.querySelector('.product-unit-price').textContent);
    var quantity = parseInt(input.value);
    var totalPrice = unitPrice * quantity;

    priceCell.textContent = totalPrice;
  }

  function updateTotalValue() {
    var prices = document.querySelectorAll('.price-value');
    var totalValue = 0;

    prices.forEach(function (price) {
      var priceValue = parseFloat(price.textContent);
      if (!isNaN(priceValue)) {
        totalValue += priceValue;
      }
    });

      var totalValueElement = document.querySelector('#tongToanBo');

    totalValueElement.textContent = totalValue.toFixed(0) + " đ";

    // Cập nhật số lượng mặt hàng trong giỏ hàng (nếu cần)
    updateCartItemCount();
  }
});


</script>



<script type="text/javascript">
    // cập nhật giỏ hàng rỗng
   function updateCartItemCount() {
    $.ajax({
        type: "GET",
        url: '@Url.Action("GetCartItemCount", "Cart")',
        success: function (data) {
            $('#CartCount').text(data);
            togglePaymentButton(data);
        },
        error: function () {
            alert("Lỗi trong khi cập nhật số lượng sản phẩm trong giỏ hàng!");
        }
    });
}

    function togglePaymentButton(count) {
        var cartHiddenElements = $(".cart-hidden");
        var cartViewElements = $(".cart-view");

        if (count > 0) {
            cartHiddenElements.hide();
            cartViewElements.show();
        } else {
            cartHiddenElements.show();
            cartViewElements.hide();
        }
    }

    $(document).ready(function () {
        // Đầu tiên, bạn cần gọi hàm togglePaymentButton với giá trị count ban đầu
        var initialCount = parseInt($("#CartCount").text());
        togglePaymentButton(initialCount);

        // Sau đó, bạn có thể gọi hàm togglePaymentButton bất kỳ khi nào giá trị count thay đổi
        // Ví dụ: khi xóa sản phẩm từ giỏ hàng
        $(".remove-cart").click(function () {
            // Xử lý xóa sản phẩm và cập nhật giá trị count
            // ...

            // Sau khi cập nhật giá trị count, gọi lại togglePaymentButton
            togglePaymentButton(newCount);
        });
    });




</script>



<!-- Breadcrumb Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-12">
            <nav class="breadcrumb bg-light mb-30">
                <a class="breadcrumb-item text-dark" href="#">Trang chủ</a>
                <span class="breadcrumb-item active">Giỏ hàng</span>
            </nav>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Cart Start -->
<div class="container-fluid">
    <div class="row px-xl-5">

        <div class="cart-view col-lg-8 table-responsive mb-5">
            <table class="table table-light table-borderless table-hover text-center mb-0">
                <thead class="thead-dark">
                    <tr>
                        <th>Sản phẩm</th>
                        <th>Giá</th>
                        <th>Số lượng</th>
                        <th>Tổng</th>
                        <th>Xóa</th>
                    </tr>
                </thead>
                <tbody class="align-middle">
                    @if (Model != null)
                    {
                        foreach (var item in Model)
                        {
                            { tong = item.Product.DonGia * item.Quantity; }

                            <tr id="product-@item.Product.MaNC">
                                <td class="align-middle text-left">
                                    <img src="~/Content/assets/img/NhacCu/@item.Product.AnhNC" alt="" style="width: 50px;">
                                    <a class="text-dark" href="@Url.Action("Details", "Product", new { Id = item.Product.MaNC })">@item.Product.TenNC</a>
                                </td>
                                <td class="align-middle product-unit-price">@item.Product.DonGia</td>
                                <td class="align-middle">
                                    <div class="input-group quantity mx-auto" style="width: 100px;">
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-primary btn-minus" data-product="@item.Product.MaNC">
                                                <i class="fa fa-minus"></i>
                                            </button>
                                        </div>
                                        <input type="text" class="form-control form-control-sm bg-secondary border-0 text-center quantity-input" value="@item.Quantity" data-product="@item.Product.MaNC">
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-primary btn-plus" data-product="@item.Product.MaNC">
                                                <i class="fa fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </td>

                                <td class="align-middle"><span class="price-value">@tong</span></td>
                                @{
                                    tongToanBo += tong;
                                }
                                <td class="align-middle">
                                    <input type="text" value="@item.Product.MaNC" style="display:none" id="productid" />
                                    <button class="remove-cart btn btn-sm btn-danger" data-product-id="@item.Product.MaNC">
                                        <i class="fa fa-times"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    }

                </tbody>
            </table>
        </div>
        <div class="cart-view col-lg-4">

            <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Thanh toán</span></h5>
            <div class="bg-light p-30 mb-5">

                <div class="pt-2">
                    <div class="d-flex justify-content-between mt-2">
                        <h5>Tổng cộng</h5>
                        <h5 id="tongToanBo">@tongToanBo đ</h5>
                    </div>
                    @if (Session["idMaKH"] == null)
                    {
                        <a class="btn btn-block btn-primary font-weight-bold my-3 py-3" href="@Url.Action("Login", "Home")">Đăng nhập</a>
                        <p>Vui lòng đăng nhập trước khi thanh toán.</p>
                    }
                    else
                    {
                        if (Session["DiaChi"] == null)
                        {
                            <a class="btn btn-block btn-primary font-weight-bold my-3 py-3" href="@Url.Action("Info", "Home")">Cập nhật địa chỉ giao hàng</a>
                            <p>Vui lòng cập nhật thông tin của mình ở phần địa chỉ giao hàng để thanh toán.</p>
                        }
                        else
                        {
                            <p>Địa chỉ giao hàng: @Session["DiaChi"].ToString()</p>
                            <a id="paymentButton" class="btn btn-block btn-primary font-weight-bold my-3 py-3" href="@Url.Action("Index", "Payment")">Mua</a>
                        }
                    }

                </div>
            </div>
        </div>

        <div class="cart-hidden col col-12 d-flex align-content-center justify-content-center">
            <img class="cart-hidden" src="~/Content/userAssets/img/giotrong.png" />

        </div>

        <div class="cart-hidden col col-12">
            <a class="text-dark" href="@Url.Action("Index", "Home")"><i class="fas fa-long-arrow-alt-left"></i> quay lại</a>
        </div>


    </div>
</div>
<!-- Cart End tongToanBo.ToString("#,##0") -->
